import (
	"go/ast"
)

var (
	Name string
	Fn   reference
)

func genAST() *ast.FuncDecl {
	ref := Fn.getAST()
	newName := Name.capitalize
	return {
		Doc:  reference.docFor(ref.Doc, Fn.Name, newName),
		Name: ast.newIdent(newName),
		Type: reference.toType(ref.Type, Fn.Pkg),
	}
}

func genMethodAST(methods []builtin) *ast.FuncDecl {
	at := Fn.Pkg
	ref := Fn.getAST()
	mt, recvType := reference.toMethodType(ref.Type, at)
	if at == "" { // builtin
		recvType = methods[methods.len-1].genAST().Type.Params.List[0].Type
	}
	return {
		Doc:  reference.docFor(ref.Doc, Fn.Name, Name),
		Name: ast.newIdent(Name),
		Type: mt,
		Recv: {List: {{Type: recvType}}},
	}
}
