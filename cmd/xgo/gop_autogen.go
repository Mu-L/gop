// Code generated by gop (Go+); DO NOT EDIT.

package main

import (
	fmt1 "fmt"
	"github.com/goplus/cobra/xcmd"
	build1 "github.com/goplus/gop/cmd/internal/build"
	clean1 "github.com/goplus/gop/cmd/internal/clean"
	doc1 "github.com/goplus/gop/cmd/internal/doc"
	"github.com/goplus/gop/cmd/internal/gengo"
	"github.com/goplus/gop/cmd/internal/gopfmt"
	"github.com/goplus/gop/cmd/internal/gopget"
	install1 "github.com/goplus/gop/cmd/internal/install"
	run1 "github.com/goplus/gop/cmd/internal/run"
	serve1 "github.com/goplus/gop/cmd/internal/serve"
	test1 "github.com/goplus/gop/cmd/internal/test"
	watch1 "github.com/goplus/gop/cmd/internal/watch"
	"github.com/goplus/gop/env"
	"github.com/qiniu/x/stringutil"
	"runtime"
)

const _ = true

type build struct {
	xcmd.Command
	*App
}
type clean struct {
	xcmd.Command
	*App
}
type doc struct {
	xcmd.Command
	*App
}
type fmt struct {
	xcmd.Command
	*App
}
type get struct {
	xcmd.Command
	*App
}
type _go struct {
	xcmd.Command
	*App
}
type install struct {
	xcmd.Command
	*App
}
type run struct {
	xcmd.Command
	*App
}
type serve struct {
	xcmd.Command
	*App
}
type test struct {
	xcmd.Command
	*App
}
type version struct {
	xcmd.Command
	*App
}
type watch struct {
	xcmd.Command
	*App
}
type App struct {
	xcmd.App
}

func (this *App) Main() {
	_gop_obj0 := &build{App: this}
	_gop_obj1 := &clean{App: this}
	_gop_obj2 := &doc{App: this}
	_gop_obj3 := &fmt{App: this}
	_gop_obj4 := &get{App: this}
	_gop_obj5 := &_go{App: this}
	_gop_obj6 := &install{App: this}
	_gop_obj7 := &run{App: this}
	_gop_obj8 := &serve{App: this}
	_gop_obj9 := &test{App: this}
	_gop_obj10 := &version{App: this}
	_gop_obj11 := &watch{App: this}
	xcmd.Gopt_App_Main(this, _gop_obj0, _gop_obj1, _gop_obj2, _gop_obj3, _gop_obj4, _gop_obj5, _gop_obj6, _gop_obj7, _gop_obj8, _gop_obj9, _gop_obj10, _gop_obj11)
}
//line cmd/xgo/build_cmd.gox:20
func (this *build) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/build_cmd.gox:20:1
	this.Short("Build Go+ files")
//line cmd/xgo/build_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/build_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/build_cmd.gox:25:1
		build1.Cmd.Run(build1.Cmd, args)
	})
}
func (this *build) Classfname() string {
	return "build"
}
//line cmd/xgo/clean_cmd.gox:20
func (this *clean) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/clean_cmd.gox:20:1
	this.Short("Clean all Go+ auto generated files")
//line cmd/xgo/clean_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/clean_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/clean_cmd.gox:25:1
		clean1.Cmd.Run(clean1.Cmd, args)
	})
}
func (this *clean) Classfname() string {
	return "clean"
}
//line cmd/xgo/doc_cmd.gox:20
func (this *doc) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/doc_cmd.gox:20:1
	this.Short("Show documentation for package or symbol")
//line cmd/xgo/doc_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/doc_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/doc_cmd.gox:25:1
		doc1.Cmd.Run(doc1.Cmd, args)
	})
}
func (this *doc) Classfname() string {
	return "doc"
}
//line cmd/xgo/fmt_cmd.gox:20
func (this *fmt) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/fmt_cmd.gox:20:1
	this.Short("Format Go+ packages")
//line cmd/xgo/fmt_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/fmt_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/fmt_cmd.gox:25:1
		gopfmt.Cmd.Run(gopfmt.Cmd, args)
	})
}
func (this *fmt) Classfname() string {
	return "fmt"
}
//line cmd/xgo/get_cmd.gox:20
func (this *get) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/get_cmd.gox:20:1
	this.Short("Add dependencies to current module and install them")
//line cmd/xgo/get_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/get_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/get_cmd.gox:25:1
		gopget.Cmd.Run(gopget.Cmd, args)
	})
}
func (this *get) Classfname() string {
	return "get"
}
//line cmd/xgo/go_cmd.gox:20
func (this *_go) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/go_cmd.gox:20:1
	this.Short("Convert Go+ code into Go code")
//line cmd/xgo/go_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/go_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/go_cmd.gox:25:1
		gengo.Cmd.Run(gengo.Cmd, args)
	})
}
func (this *_go) Classfname() string {
	return "go"
}
//line cmd/xgo/install_cmd.gox:20
func (this *install) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/install_cmd.gox:20:1
	this.Short("Build Go+ files and install target to GOBIN")
//line cmd/xgo/install_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/install_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/install_cmd.gox:25:1
		install1.Cmd.Run(install1.Cmd, args)
	})
}
func (this *install) Classfname() string {
	return "install"
}
//line cmd/xgo/run_cmd.gox:20
func (this *run) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/run_cmd.gox:20:1
	this.Short("Compile and run a Go+ program")
//line cmd/xgo/run_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/run_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/run_cmd.gox:25:1
		run1.Cmd.Run(run1.Cmd, args)
	})
}
func (this *run) Classfname() string {
	return "run"
}
//line cmd/xgo/serve_cmd.gox:20
func (this *serve) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/serve_cmd.gox:20:1
	this.Short("Serve as a Go+ LangServer")
//line cmd/xgo/serve_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/serve_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/serve_cmd.gox:25:1
		serve1.Cmd.Run(serve1.Cmd, args)
	})
}
func (this *serve) Classfname() string {
	return "serve"
}
//line cmd/xgo/test_cmd.gox:20
func (this *test) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/test_cmd.gox:20:1
	this.Short("Test Go+ packages")
//line cmd/xgo/test_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/test_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/test_cmd.gox:25:1
		test1.Cmd.Run(test1.Cmd, args)
	})
}
func (this *test) Classfname() string {
	return "test"
}
//line cmd/xgo/version_cmd.gox:21
func (this *version) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/version_cmd.gox:21:1
	this.Short("Print Go+ version")
//line cmd/xgo/version_cmd.gox:23:1
	this.Run__0(func() {
//line cmd/xgo/version_cmd.gox:24:1
		fmt1.Println(stringutil.Concat("xgo ", env.Version(), " ", runtime.GOOS, "/", runtime.GOARCH))
	})
}
func (this *version) Classfname() string {
	return "version"
}
//line cmd/xgo/watch_cmd.gox:20
func (this *watch) Main(_gop_arg0 string) {
	this.Command.Main(_gop_arg0)
//line cmd/xgo/watch_cmd.gox:20:1
	this.Short("Monitor code changes in a Go+ workspace to generate Go files")
//line cmd/xgo/watch_cmd.gox:22:1
	this.FlagOff()
//line cmd/xgo/watch_cmd.gox:24:1
	this.Run__1(func(args []string) {
//line cmd/xgo/watch_cmd.gox:25:1
		watch1.Cmd.Run(watch1.Cmd, args)
	})
}
func (this *watch) Classfname() string {
	return "watch"
}
func main() {
	new(App).Main()
}
